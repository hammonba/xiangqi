{:watch-dirs ["src/cljc" "src/cljs" "test/cljs"],
 :css-dirs ["resources/public/css"],
 }

;:builds [{:id "avira.eua"
;          :main kermit.avira.eua
;          :output-to "public/js/avira/eua.js"
;          :output-dir "public/js/avira"
;          :asset-path "/js/avira"
;          :optimizations #profile {:dev :none
;                                   :prod :advanced}
;          :closure-defines
;          {kermit.avira.config/zendesk-brand-id #ref [:zendesk/brand-id]
;           kermit.avira.config/myavira-url
;           #join [#ref [:avira-singlesignon-config :avira.uri/root]
;                  #ref [:avira-singlesignon-config :avira.uri/login]]
;           kermit.avira.config/myavira-clientid #ref [:avira-singlesignon-config :avira/client-id]
;           kermit.avira.config/myavira-myaccount
;           #join [#ref [:avira-singlesignon-config :avira.uri/root]
;                  #ref [:avira-singlesignon-config :avira.uri/my-account]]
;           kermit.avira.config/asset-limits-transit #kermit/transit-json #ref [:kermit.cybersecurity/asset-limits]}
;          }]


;; Figwheel-main configuration options see: https://figwheel.org/config-options
;; these will be overriden by the metadata config options in dev.cljs.edn build file

;;{
 ;; Set the server port https://figwheel.org/config-options#ring-server-options
 ;; :ring-server-options {:port 9500}

 ;; Target directory https://figwheel.org/config-options#target-dir
 ;; you may want to set this to resources if you are using Leiningen
 ;; :target-dir "resources"

 ;; Server Ring Handler (optional) https://figwheel.org/docs/ring-handler.html
 ;; If you want to embed a ring handler into the figwheel server, this
 ;; is for simple ring servers
 ;; :ring-handler hello_world.server/handler

 ;; To be able to open files in your editor from the heads up display
 ;; you will need to put a script on your path. This script will have
 ;; to take a file path and a line number ie.
 ;; in ~/bin/myfile-opener:
 ;;
 ;; #! /bin/sh
 ;; emacsclient -n +$2:$3 $1
 ;;
 ;; :open-file-command "myfile-opener"

 ;; if you are using emacsclient you can just use
 ;; :open-file-command "emacsclient"

 ;; Logging output gets printed to the REPL, if you want to redirect it to a file:
 ;; :log-file "figwheel-main.log"
;; }
